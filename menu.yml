items:
  1:
    title: '1. Develop'
    items:
      1:
        title: '1. Build'
        env: 'dev'
        commands: 
          - 'docker-compose --project-name %(appName)s --file conf/docker/docker-compose_dev.yml build --no-cache'
        vars:
          - appName
      2:
        title: '2. Deploy and Up'
        env: 'dev'
        commands:
          - 'mkdir -p app'
          - 'sh conf/scripts/deploy/dev.sh'
          - 'docker network create -d bridge --subnet 192.168.0.0/24 --gateway 192.168.0.1 dockernet' 
          - 'docker-compose --project-name %(appName)s --file conf/docker/docker-compose_dev.yml up --force-recreate -d'
          - 'docker exec -it %(appName)s_nodejs_1 sh /home/scripts/deploy_dev.sh'
        vars:
          - appName
      3:
        title: '3. Up'
        env: 'dev'
        commands: 
          - 'docker network create -d bridge --subnet 192.168.0.0/24 --gateway 192.168.0.1 dockernet'
          - 'docker-compose --project-name %(appName)s --file conf/docker/docker-compose_dev.yml up --force-recreate -d'
        vars:
          - appName
      4:
        title: '4. Stop'
        env: 'dev'
        commands: 
          - 'docker-compose --project-name %(appName)s --file conf/docker/docker-compose_dev.yml stop'
          - 'sleep 3'
          - 'docker network rm dockernet'
        vars:
          - appName
      5:
        title: '5. Remove'
        env: 'dev'
        commands: 
          - 'docker rm %(appName)s_nginx_1 --force'
          - 'docker rm %(appName)s_nodejs_1 --force'
          - 'docker rmi %(appName)s_nginx --force'
          - 'docker rmi %(appName)s_nodejs --force'
        vars:
          - appName